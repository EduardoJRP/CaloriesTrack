// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Use only grams for storage
model Item_Macro {
  name String
  id Int @id @default(autoincrement())
  quantity Int //Store quantity in grams
  calories     Float // Precision for calorie count
  carbohydrates Float // Precision for carbs (e.g., grams)
  fats         Float // Precision for fats (e.g., grams)
  proteins      Float // Precision for protein (e.g., grams)
  users UserItemMacro[] // Relation to UserItemMacro
}

model User {
  id Int @id @default(autoincrement())
  name String
  weight Float // Use kilograms
  height Float // Use meters
  bodyFatPercentage Float
  age Int
  itemMacros UserItemMacro[] // Relation to UserItemMacro
}

// Table for Item_macro and User relationship
model UserItemMacro {
  userId Int
  itemMacroId Int
  user User @relation(fields: [userId], references: [id])
  itemMacro Item_Macro @relation(fields: [itemMacroId], references: [id])
  @@id([userId, itemMacroId]) // Composite primary key
}